This page will outlined plans for migrating Biopython from [[CVS]] to [[SVN|Subversion (SVN)]], although in the end we [[GitMigration|switched straight to Git]] instead.

== Biopython Users ==

Content for users to be created.

=== Installing Subversion ===

==== Microsoft Windows ====
Download and install either [http://tortoisesvn.tigris.org/ TortoiseSVN] or [http://www.rapidsvn.org/ RapidSVN]. There is also a binary available for a command line based Subversion client; see the [http://subversion.tigris.org/project_packages.html#binary-packages Subversion website].

==== Mac OS X ====
Download and install Subversion via [http://fink.sourceforge.net/ Fink] or the [http://subversion.tigris.org/project_packages.html#binary-packages binary package].

==== Linux ====
Some distributions come with the Subversion packages by default, or they may have already been installed by your system administrator. Verify whether you have Subversion installed using `which`
<code><pre>
user@compy$ which svn
/usr/bin/svn
user@compy$ 
</pre></code>

In the above example, Subversion is installed and its executable is located within <code>/usr/bin/</code>.

<code><pre>
user@compy$ which svn
user@compy$ 
</pre></code>

On the other hand, in the above example, <code>which svn</code> returns nothing. This indicates Subversion is not likely installed. You or your system administrator will need to use the appropriate package manager to download and install the packages for Subversion. For example, on Ubuntu, users would execute the following:

<code><pre>
user@compy$ sudo apt-get update && sudo apt-get install subversion
</pre></code>

== Biopython Developers ==

Existing developer accounts should all continue to work as before.  When working with the main trunk, basic operations such as checking out code, diff, and committing changes are very similar to those under CVS.

== Biopython Migration Strategy ==

Currently this is being discussed on the Biopython developers [[Mailing_lists|mailing list]], where there is a general consensus that moving to a distributed version control system (DVCS) would be more worthwhile than simple moving from CVS to SVN.  See the [[GitMigration|git migration]] page.